路由跳转
	默认
	<router-link to="/user"></router-link>
	传参
	<router-link :to="{name:'user',params:{id:1}}"></router-link>
	路劲
	<router-link :to="{path:'user',query:{id:1}}"></router-link>
	编程式跳转加传参
	this.$router.push({path: '/home/sort/detail',query:{id: 'abc'}})
        this.$router.push({name: 'detail',params:{id: 'abc'}})
	//注意：使用params传参不会显示在url上，但刷新时会消失
		使用query传参会显示在url上，但刷新时不会消失

监听滚动
	被监听元素添加ref属性
	mounted () {
    		window.addEventListener('scroll', this.handleScrollx, true)
  	},
  	destroyed () {
    		window.addEventListener('scroll', this.handleScrollx, false)
  	},
  	methods: {
    		handleScrollx () {
      			console.log('滚动高度', window.pageYOffset)
      			console.log('距离顶部高度', this.$refs.listNav.getBoundingClientRect().top)
    		}
  	}

swiper
	元素：<swiper ref="mySwiper" :options="swiperOptions">
              <swiper-slide>
              </swiper-slide>
              <swiper-slide>
              </swiper-slide>
              <swiper-slide>
              </swiper-slide>
              <swiper-slide>
              </swiper-slide>
              <div slot="pagination" class="swiper-pagination" />
            </swiper>
	data里添加：swiperOther: {
        	observer: true,//修改swiper自己或子元素时，自动初始化swiper,对loop和autoplay同时使用时不生效有作用
        	observeParents: true,//修改swiper的父元素时，自动初始化swiper,对loop和autoplay同时使用时不生效有作用
        	loop: true,
        	autoplay: {
          		delay: 1500,//自动切换时间
          		disableOnInteraction: false//自动切换不受操作影响
        	},
        	direction: 'vertical',
        	speed: 1500,
        	noSwiping: true//使swiper元素不能被操作，需要在对应元素上设置类名'swiper-no-swiping'
        	// Some Swiper option/callback...
      		}
	computed里添加：swiper() {
    			return this.$refs.mySwiper.$swiper
  			}

	mounted里添加：this.swiper.slideTo(0, 2000, false)//过渡时间


图片不显示或为空时加载默认图片
	
	<img :src="item.url" alt="" :onerror="errorimg">
	data（）{
		return {
			errorimg:'this.src="' + require('assets/list/moren.jpg') + '"'
		}
	}

让元素滚动
	document.getElementById('a').scrollIntoView()
	//可添加参数
	document.getElementById('jinpai').scrollIntoView({
        	behavior: 'smooth', // 平滑过渡
        	block: 'center' // 视窗中心
      	})

watch
	watch:{
		a(curVal,oldVal){},
		a1:'b', //值可以为methods的方法名
		a2:{
			//注意：当观察的数据为对象或数组时，curVal和oldVal是相等的，因为这两个形参指向的是同一个数据对象
			handler(curVal,oldVal){
				
			},
			deep:true
		}
	}

v-html样式不生效
	在使用v-html的标签中加上 >>>
	如： .tabel >>> span

使用vant toast
	this.$toast('提示')

获取radio的值
	<input id="type1" v-model="type" value="淘宝" type="radio" name="type" checked>
        <label for="type1">淘宝</label>
	<input id="type2" v-model="type" value="京东" type="radio" name="type">
        <label for="type2">京东</label>

vue中使用ts
	使用computed时，用get
	get swiper(){aaa}

swiper在vue中分页器不显示
	swiper版本过高,使用swiper@5.4.5就行

swiper在vue中分页器小点样式无法更改
	css具名scoped以后，swiper分页样式就会失效。因为分页是在mounted里创建的，此时创建的DOM，vue不会加上scoped自定义属性
	在style scoped下面再写一个style

点击切换tab
	:class="tabIndex === 0 ? 'su-case-tab su-case-tab-act' : 'su-case-tab'" @click="tabIndex = 0"
	data里存储 tabIndex = 0 

使用vue-baidu-map
	全局注册
	import Vue from 'vue'
	import BaiduMap from 'vue-baidu-map'

	Vue.use(BaiduMap, {ak: '密钥'})
	<baidu-map class="bm-view">
  	</baidu-map>
	
向上滚动并停留
	animationStart() {
      		this.newsList = document.querySelector('.inquire-annunciate-ul')
      		const newsListBox = document.querySelector('.inquire-annunciate-ul')
      		const newsListItemC = document.querySelector('.inquire-annunciate-ul li:first-child').innerHTML
      		const newsListItem = document.createElement('li')
      		newsListItem.className = 'inquire-annunciate-list'
      		newsListItem.innerHTML = newsListItemC
      		newsListBox.appendChild(newsListItem)
      		this.newsListHeight = this.newsList.offsetHeight
      		this.newsListAnimation()
    	},
    	newsListAnimation() {
      		this.newsList.style.transform = `translateY(-${this.translateY}px)`

      		if (this.translateY >= this.newsListHeight - 19) {
        		this.translateY = 0
      		} else {
        		this.translateY += 0.5
      		}

      		const _this = this

      		// eslint-disable-next-line eqeqeq
      		if (this.translateY !== 0 && this.translateY % 19 == 0) {
        		setTimeout(function() {
          		requestAnimationFrame(_this.newsListAnimation)
        		}, 1000)
      		} else {
        		requestAnimationFrame(_this.newsListAnimation)
      		}
    	}
	在mounted里：this.animationStart()

跳转的同时触发点击事件
	<router-link v-on:click.native="doSomethingCool" to="/">Home</router-link>
	在标签里添加点击事件时使用@click.native="a()"

子组件接收参数
	父：<zizujian aa="aaaa" />
	自： export default{
		props:{
			a: String	
		}	
		}

获取元素高度
	this.$refs.head.offsetHeight

